{"version":3,"file":"component---src-pages-experiments-tsx-77128ec2df98ca5ca9d7.js","mappings":"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","sources":["webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/Code/Code.module.css.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/Code/Code.mjs","webpack://travnikov.dev/./src/pages/experiments.tsx","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/Card/Card.context.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/Card/Card.module.css.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/Card/CardSection/CardSection.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/Card/Card.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/Image/Image.module.css.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/Image/Image.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/SimpleGrid/SimpleGridVariables.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/SimpleGrid/SimpleGrid.module.css.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/SimpleGrid/SimpleGrid.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/core/utils/get-base-value/get-base-value.mjs"],"sourcesContent":["'use client';\nvar classes = {\"root\":\"m_b183c0a2\"};\n\nexport { classes as default };\n//# sourceMappingURL=Code.module.css.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport 'react';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Code.module.css.mjs';\n\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((theme, { color }) => ({\n  root: {\n    \"--code-bg\": color ? getThemeColor(color, theme) : void 0\n  }\n}));\nconst Code = factory((_props, ref) => {\n  const props = useProps(\"Code\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    block,\n    variant,\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Code\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      component: block ? \"pre\" : \"code\",\n      variant,\n      ref,\n      mod: [{ block }, mod],\n      ...getStyles(\"root\"),\n      ...others,\n      dir: \"ltr\"\n    }\n  );\n});\nCode.classes = classes;\nCode.displayName = \"@mantine/core/Code\";\n\nexport { Code };\n//# sourceMappingURL=Code.mjs.map\n","import React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\nimport {\n  SimpleGrid,\n  Card,\n  Image,\n  Text,\n  Badge,\n  Group,\n  Title,\n  Container,\n  Box,\n  Code,\n  Button,\n} from \"@mantine/core\";\nimport BaseLayout from \"../layouts/BaseLayout\";\nimport { SEO } from \"../utils/seo/SEO\";\n\ninterface ExperimentsPageProps extends PageProps {\n  data: {\n    allMarkdownRemark: {\n      nodes: {\n        id: string;\n        frontmatter: {\n          title: string;\n          slug: string;\n          description: string;\n          featuredImage: string;\n          technologies: string[];\n        };\n        html: string;\n      }[];\n    };\n  };\n}\n\nexport default function ExperimentsPage({ data }: ExperimentsPageProps) {\n  const experiments = data.allMarkdownRemark.nodes;\n\n  return (\n    <BaseLayout>\n      <Container size=\"lg\" py=\"xl\">\n        <Box mb=\"xl\">\n          <Title order={1} mb=\"md\">\n            Web Experiments\n          </Title>\n          <Text size=\"lg\">\n            A collection of fun and interactive frontend experiments showcasing\n            creative techniques and concepts.\n          </Text>\n        </Box>\n\n        {experiments.length > 0 ? (\n          <SimpleGrid cols={{ base: 1, md: 2 }} spacing=\"xl\">\n            {experiments.map((experiment) => (\n              <Card\n                key={experiment.id}\n                shadow=\"sm\"\n                padding=\"lg\"\n                radius=\"md\"\n                withBorder\n              >\n                {experiment.frontmatter.featuredImage && (\n                  <Card.Section>\n                    <Image\n                      src={experiment.frontmatter.featuredImage}\n                      height={200}\n                      alt={experiment.frontmatter.title}\n                    />\n                  </Card.Section>\n                )}\n                <Title order={3} mt=\"md\" mb=\"xs\">\n                  {experiment.frontmatter.title}\n                </Title>\n                <Group mb=\"md\">\n                  {experiment.frontmatter.technologies.map((tech, index) => (\n                    <Badge key={index} color=\"blue\" variant=\"light\">\n                      {tech}\n                    </Badge>\n                  ))}\n                </Group>\n                <Text mb=\"md\">{experiment.frontmatter.description}</Text>\n                <Box mb=\"md\">\n                  <Text fw={500} mb=\"xs\">\n                    Sample Code:\n                  </Text>\n                  <Code block>{experiment.html}</Code>\n                </Box>\n                <Button\n                  component=\"a\"\n                  href={`/experiments/${experiment.frontmatter.slug}`}\n                  fullWidth\n                >\n                  View Details\n                </Button>\n              </Card>\n            ))}\n          </SimpleGrid>\n        ) : (\n          // Placeholder content when no experiments exist yet\n          <SimpleGrid cols={{ base: 1, md: 2 }} spacing=\"xl\">\n            {[1, 2, 3, 4].map((i) => (\n              <Card key={i} shadow=\"sm\" padding=\"lg\" radius=\"md\" withBorder>\n                <Card.Section>\n                  <Box h={200} bg=\"gray.2\" />\n                </Card.Section>\n                <Title order={3} mt=\"md\" mb=\"xs\">\n                  Experiment {i}\n                </Title>\n                <Group mb=\"md\">\n                  <Badge color=\"blue\" variant=\"light\">\n                    React\n                  </Badge>\n                  <Badge color=\"green\" variant=\"light\">\n                    Three.js\n                  </Badge>\n                </Group>\n                <Text mb=\"md\">\n                  This is a placeholder for an experiment description.\n                  Experiments will be loaded from Markdown files.\n                </Text>\n                <Box mb=\"md\">\n                  <Text fw={500} mb=\"xs\">\n                    Sample Code:\n                  </Text>\n                  <Code block>{`function ExampleComponent() {\n  return <div>Hello World</div>;\n}`}</Code>\n                </Box>\n                <Button fullWidth disabled>\n                  View Live Demo\n                </Button>\n              </Card>\n            ))}\n          </SimpleGrid>\n        )}\n      </Container>\n    </BaseLayout>\n  );\n}\n\nexport function Head() {\n  return (\n    <SEO\n      title=\"Web Experiments\"\n      description=\"Explore interactive web experiments and frontend demos created by Roman Travnikov using modern web technologies.\"\n    />\n  );\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(filter: { frontmatter: { template: { eq: \"experiment\" } } }) {\n      nodes {\n        id\n        frontmatter {\n          title\n          slug\n          description\n          featuredImage\n          technologies\n        }\n        html\n      }\n    }\n  }\n`;\n","'use client';\nimport 'react';\nimport { createSafeContext } from '../../core/utils/create-safe-context/create-safe-context.mjs';\nimport 'react/jsx-runtime';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\n\nconst [CardProvider, useCardContext] = createSafeContext(\n  \"Card component was not found in tree\"\n);\n\nexport { CardProvider, useCardContext };\n//# sourceMappingURL=Card.context.mjs.map\n","'use client';\nvar classes = {\"root\":\"m_e615b15f\",\"section\":\"m_599a2148\"};\n\nexport { classes as default };\n//# sourceMappingURL=Card.module.css.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../../core/factory/polymorphic-factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useCardContext } from '../Card.context.mjs';\nimport classes from '../Card.module.css.mjs';\n\nconst defaultProps = {};\nconst CardSection = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"CardSection\", defaultProps, _props);\n  const { classNames, className, style, styles, vars, withBorder, inheritPadding, mod, ...others } = props;\n  const ctx = useCardContext();\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      mod: [{ \"with-border\": withBorder, \"inherit-padding\": inheritPadding }, mod],\n      ...ctx.getStyles(\"section\", { className, style, styles, classNames }),\n      ...others\n    }\n  );\n});\nCardSection.classes = classes;\nCardSection.displayName = \"@mantine/core/CardSection\";\n\nexport { CardSection };\n//# sourceMappingURL=CardSection.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { Children, cloneElement } from 'react';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Paper } from '../Paper/Paper.mjs';\nimport { CardProvider } from './Card.context.mjs';\nimport { CardSection } from './CardSection/CardSection.mjs';\nimport classes from './Card.module.css.mjs';\n\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((_, { padding }) => ({\n  root: {\n    \"--card-padding\": getSpacing(padding)\n  }\n}));\nconst Card = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Card\", defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, children, padding, ...others } = props;\n  const getStyles = useStyles({\n    name: \"Card\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const _children = Children.toArray(children);\n  const content = _children.map((child, index) => {\n    if (typeof child === \"object\" && child && \"type\" in child && child.type === CardSection) {\n      return cloneElement(child, {\n        \"data-first-section\": index === 0 || void 0,\n        \"data-last-section\": index === _children.length - 1 || void 0\n      });\n    }\n    return child;\n  });\n  return /* @__PURE__ */ jsx(CardProvider, { value: { getStyles }, children: /* @__PURE__ */ jsx(Paper, { ref, unstyled, ...getStyles(\"root\"), ...others, children: content }) });\n});\nCard.classes = classes;\nCard.displayName = \"@mantine/core/Card\";\nCard.Section = CardSection;\n\nexport { Card };\n//# sourceMappingURL=Card.mjs.map\n","'use client';\nvar classes = {\"root\":\"m_9e117634\"};\n\nexport { classes as default };\n//# sourceMappingURL=Image.module.css.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { useState, useEffect } from 'react';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Image.module.css.mjs';\n\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((_, { radius, fit }) => ({\n  root: {\n    \"--image-radius\": radius === void 0 ? void 0 : getRadius(radius),\n    \"--image-object-fit\": fit\n  }\n}));\nconst Image = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Image\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    onError,\n    src,\n    radius,\n    fit,\n    fallbackSrc,\n    mod,\n    ...others\n  } = props;\n  const [error, setError] = useState(!src);\n  useEffect(() => setError(!src), [src]);\n  const getStyles = useStyles({\n    name: \"Image\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  if (error && fallbackSrc) {\n    return /* @__PURE__ */ jsx(\n      Box,\n      {\n        component: \"img\",\n        ref,\n        src: fallbackSrc,\n        ...getStyles(\"root\"),\n        onError,\n        mod: [\"fallback\", mod],\n        ...others\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      component: \"img\",\n      ref,\n      ...getStyles(\"root\"),\n      src,\n      onError: (event) => {\n        onError?.(event);\n        setError(true);\n      },\n      mod,\n      ...others\n    }\n  );\n});\nImage.classes = classes;\nImage.displayName = \"@mantine/core/Image\";\n\nexport { Image };\n//# sourceMappingURL=Image.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { keys } from '../../core/utils/keys/keys.mjs';\nimport { px } from '../../core/utils/units-converters/px.mjs';\nimport { filterProps } from '../../core/utils/filter-props/filter-props.mjs';\nimport 'react';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport { getSortedBreakpoints } from '../../core/utils/get-sorted-breakpoints/get-sorted-breakpoints.mjs';\nimport { getBaseValue } from '../../core/utils/get-base-value/get-base-value.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { InlineStyles } from '../../core/InlineStyles/InlineStyles.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\n\nfunction SimpleGridMediaVariables({\n  spacing,\n  verticalSpacing,\n  cols,\n  selector\n}) {\n  const theme = useMantineTheme();\n  const _verticalSpacing = verticalSpacing === void 0 ? spacing : verticalSpacing;\n  const baseStyles = filterProps({\n    \"--sg-spacing-x\": getSpacing(getBaseValue(spacing)),\n    \"--sg-spacing-y\": getSpacing(getBaseValue(_verticalSpacing)),\n    \"--sg-cols\": getBaseValue(cols)?.toString()\n  });\n  const queries = keys(theme.breakpoints).reduce(\n    (acc, breakpoint) => {\n      if (!acc[breakpoint]) {\n        acc[breakpoint] = {};\n      }\n      if (typeof spacing === \"object\" && spacing[breakpoint] !== void 0) {\n        acc[breakpoint][\"--sg-spacing-x\"] = getSpacing(spacing[breakpoint]);\n      }\n      if (typeof _verticalSpacing === \"object\" && _verticalSpacing[breakpoint] !== void 0) {\n        acc[breakpoint][\"--sg-spacing-y\"] = getSpacing(_verticalSpacing[breakpoint]);\n      }\n      if (typeof cols === \"object\" && cols[breakpoint] !== void 0) {\n        acc[breakpoint][\"--sg-cols\"] = cols[breakpoint];\n      }\n      return acc;\n    },\n    {}\n  );\n  const sortedBreakpoints = getSortedBreakpoints(keys(queries), theme.breakpoints).filter(\n    (breakpoint) => keys(queries[breakpoint.value]).length > 0\n  );\n  const media = sortedBreakpoints.map((breakpoint) => ({\n    query: `(min-width: ${theme.breakpoints[breakpoint.value]})`,\n    styles: queries[breakpoint.value]\n  }));\n  return /* @__PURE__ */ jsx(InlineStyles, { styles: baseStyles, media, selector });\n}\nfunction getBreakpoints(values) {\n  if (typeof values === \"object\" && values !== null) {\n    return keys(values);\n  }\n  return [];\n}\nfunction sortBreakpoints(breakpoints) {\n  return breakpoints.sort((a, b) => px(a) - px(b));\n}\nfunction getUniqueBreakpoints({\n  spacing,\n  verticalSpacing,\n  cols\n}) {\n  const breakpoints = Array.from(\n    /* @__PURE__ */ new Set([\n      ...getBreakpoints(spacing),\n      ...getBreakpoints(verticalSpacing),\n      ...getBreakpoints(cols)\n    ])\n  );\n  return sortBreakpoints(breakpoints);\n}\nfunction SimpleGridContainerVariables({\n  spacing,\n  verticalSpacing,\n  cols,\n  selector\n}) {\n  const _verticalSpacing = verticalSpacing === void 0 ? spacing : verticalSpacing;\n  const baseStyles = filterProps({\n    \"--sg-spacing-x\": getSpacing(getBaseValue(spacing)),\n    \"--sg-spacing-y\": getSpacing(getBaseValue(_verticalSpacing)),\n    \"--sg-cols\": getBaseValue(cols)?.toString()\n  });\n  const uniqueBreakpoints = getUniqueBreakpoints({ spacing, verticalSpacing, cols });\n  const queries = uniqueBreakpoints.reduce(\n    (acc, breakpoint) => {\n      if (!acc[breakpoint]) {\n        acc[breakpoint] = {};\n      }\n      if (typeof spacing === \"object\" && spacing[breakpoint] !== void 0) {\n        acc[breakpoint][\"--sg-spacing-x\"] = getSpacing(spacing[breakpoint]);\n      }\n      if (typeof _verticalSpacing === \"object\" && _verticalSpacing[breakpoint] !== void 0) {\n        acc[breakpoint][\"--sg-spacing-y\"] = getSpacing(_verticalSpacing[breakpoint]);\n      }\n      if (typeof cols === \"object\" && cols[breakpoint] !== void 0) {\n        acc[breakpoint][\"--sg-cols\"] = cols[breakpoint];\n      }\n      return acc;\n    },\n    {}\n  );\n  const media = uniqueBreakpoints.map((breakpoint) => ({\n    query: `simple-grid (min-width: ${breakpoint})`,\n    styles: queries[breakpoint]\n  }));\n  return /* @__PURE__ */ jsx(InlineStyles, { styles: baseStyles, container: media, selector });\n}\n\nexport { SimpleGridContainerVariables, SimpleGridMediaVariables };\n//# sourceMappingURL=SimpleGridVariables.mjs.map\n","'use client';\nvar classes = {\"container\":\"m_925c2d2c\",\"root\":\"m_2415a157\"};\n\nexport { classes as default };\n//# sourceMappingURL=SimpleGrid.module.css.mjs.map\n","'use client';\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { useRandomClassName } from '../../core/Box/use-random-classname/use-random-classname.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { SimpleGridContainerVariables, SimpleGridMediaVariables } from './SimpleGridVariables.mjs';\nimport classes from './SimpleGrid.module.css.mjs';\n\nconst defaultProps = {\n  cols: 1,\n  spacing: \"md\",\n  type: \"media\"\n};\nconst SimpleGrid = factory((_props, ref) => {\n  const props = useProps(\"SimpleGrid\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    cols,\n    verticalSpacing,\n    spacing,\n    type,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"SimpleGrid\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars\n  });\n  const responsiveClassName = useRandomClassName();\n  if (type === \"container\") {\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(SimpleGridContainerVariables, { ...props, selector: `.${responsiveClassName}` }),\n      /* @__PURE__ */ jsx(\"div\", { ...getStyles(\"container\"), children: /* @__PURE__ */ jsx(Box, { ref, ...getStyles(\"root\", { className: responsiveClassName }), ...others }) })\n    ] });\n  }\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    /* @__PURE__ */ jsx(SimpleGridMediaVariables, { ...props, selector: `.${responsiveClassName}` }),\n    /* @__PURE__ */ jsx(Box, { ref, ...getStyles(\"root\", { className: responsiveClassName }), ...others })\n  ] });\n});\nSimpleGrid.classes = classes;\nSimpleGrid.displayName = \"@mantine/core/SimpleGrid\";\n\nexport { SimpleGrid };\n//# sourceMappingURL=SimpleGrid.mjs.map\n","'use client';\nfunction getBaseValue(value) {\n  if (typeof value === \"object\" && value !== null) {\n    if (\"base\" in value) {\n      return value.base;\n    }\n    return void 0;\n  }\n  return value;\n}\n\nexport { getBaseValue };\n//# sourceMappingURL=get-base-value.mjs.map\n"],"names":["classes","defaultProps","varsResolver","theme","color","root","Code","factory","_props","ref","props","classNames","className","style","styles","unstyled","vars","block","variant","mod","others","getStyles","name","jsx","Box","component","dir","displayName","ExperimentsPage","_ref","data","experiments","allMarkdownRemark","nodes","React","BaseLayout","Container","size","py","mb","Title","order","Text","length","SimpleGrid","cols","base","md","spacing","map","experiment","Card","key","id","shadow","padding","radius","withBorder","frontmatter","featuredImage","Section","Image","src","height","alt","title","mt","Group","technologies","tech","index","Badge","description","fw","html","Button","href","slug","fullWidth","i","h","bg","disabled","Head","SEO","CardProvider","useCardContext","CardSection","inheritPadding","ctx","_","children","_children","Children","toArray","content","child","type","cloneElement","value","Paper","fit","onError","fallbackSrc","error","setError","useState","useEffect","event","SimpleGridMediaVariables","verticalSpacing","selector","_verticalSpacing","baseStyles","toString","queries","keys","breakpoints","reduce","acc","breakpoint","media","filter","query","InlineStyles","getBreakpoints","values","getUniqueBreakpoints","sort","a","b","px","sortBreakpoints","Array","from","Set","SimpleGridContainerVariables","uniqueBreakpoints","container","responsiveClassName","jsxs","Fragment","getBaseValue"],"sourceRoot":""}