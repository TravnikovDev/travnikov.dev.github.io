{"version":3,"file":"component---src-pages-projects-tsx-081d5d8a6524ff41e48f.js","mappings":"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","sources":["webpack://travnikov.dev/./src/pages/projects.tsx","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/Badge/Badge.module.css.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/Badge/Badge.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/Card/Card.context.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/Card/Card.module.css.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/Card/CardSection/CardSection.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/Card/Card.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/Image/Image.module.css.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/Image/Image.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/SimpleGrid/SimpleGridVariables.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/SimpleGrid/SimpleGrid.module.css.mjs","webpack://travnikov.dev/./node_modules/@mantine/core/esm/components/SimpleGrid/SimpleGrid.mjs"],"sourcesContent":["import React from \"react\";\nimport { graphql, Link, PageProps } from \"gatsby\";\nimport {\n  SimpleGrid,\n  Card,\n  Image,\n  Text,\n  Badge,\n  Group,\n  Title,\n  Container,\n  Box,\n} from \"@mantine/core\";\nimport BaseLayout from \"../layouts/BaseLayout\";\nimport { SEO } from \"../utils/seo/SEO\";\n\ninterface ProjectsPageProps extends PageProps {\n  data: {\n    // We'll use local content instead of Strapi for now\n    // Fallback already included in component\n  };\n}\n\nexport default function ProjectsPage({ data }: ProjectsPageProps) {\n  // Since we're not using Strapi currently, we'll default to placeholder content\n  const projects: any[] = [];\n\n  return (\n    <BaseLayout>\n      <Container size=\"lg\" py=\"xl\">\n        <Box mb=\"xl\">\n          <Title order={1} mb=\"md\">\n            Projects\n          </Title>\n          <Text size=\"lg\">\n            A showcase of my work as a senior frontend developer, including\n            indie projects, browser extensions, and professional work.\n          </Text>\n        </Box>\n\n        {projects.length > 0 ? (\n          <SimpleGrid\n            cols={{ base: 1, sm: 2, md: 3 }}\n            spacing={{ base: \"md\", sm: \"lg\" }}\n          >\n            {projects.map((project) => (\n              <Link\n                key={project.id}\n                to={`/projects/${project.slug}`}\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\n              >\n                <Card shadow=\"sm\" padding=\"lg\" radius=\"md\" withBorder>\n                  {project.image && (\n                    <Card.Section>\n                      <Image\n                        src={project.image.publicURL}\n                        height={160}\n                        alt={project.title}\n                      />\n                    </Card.Section>\n                  )}\n                  <Group justify=\"space-between\" mt=\"md\" mb=\"xs\">\n                    <Text fw={500}>{project.title}</Text>\n                    <Badge color=\"blue\">{project.category}</Badge>\n                  </Group>\n                  <Text size=\"sm\" color=\"dimmed\" lineClamp={3}>\n                    {project.description}\n                  </Text>\n                </Card>\n              </Link>\n            ))}\n          </SimpleGrid>\n        ) : (\n          // Placeholder content when no projects exist yet\n          <SimpleGrid\n            cols={{ base: 1, sm: 2, md: 3 }}\n            spacing={{ base: \"md\", sm: \"lg\" }}\n          >\n            {[1, 2, 3, 4, 5, 6].map((i) => (\n              <Card key={i} shadow=\"sm\" padding=\"lg\" radius=\"md\" withBorder>\n                <Card.Section>\n                  <Box h={160} bg=\"gray.2\" />\n                </Card.Section>\n                <Group justify=\"space-between\" mt=\"md\" mb=\"xs\">\n                  <Text fw={500}>Project {i}</Text>\n                  <Badge color=\"blue\">Web App</Badge>\n                </Group>\n                <Text size=\"sm\" color=\"dimmed\">\n                  This is a placeholder for a project description. Projects will\n                  be loaded from Markdown files.\n                </Text>\n              </Card>\n            ))}\n          </SimpleGrid>\n        )}\n      </Container>\n    </BaseLayout>\n  );\n}\n\nexport function Head() {\n  return (\n    <SEO\n      title=\"Projects\"\n      description=\"Browse through Roman Travnikov's portfolio of frontend development projects including web applications, browser extensions, and more.\"\n    />\n  );\n}\n\n// Removed the Strapi query that was causing errors\n// We can add a query for local markdown files later if needed\n/*\nexport const query = graphql`\n  query {\n    allStrapiProject {\n      nodes {\n        id\n        title\n        description\n        slug\n        category\n        tags\n        image {\n          publicURL\n        }\n      }\n    }\n  }\n`;\n*/\n","'use client';\nvar classes = {\"root\":\"m_347db0ec\",\"root--dot\":\"m_fbd81e3d\",\"label\":\"m_5add502a\",\"section\":\"m_91fdda9b\"};\n\nexport { classes as default };\n//# sourceMappingURL=Badge.module.css.mjs.map\n","'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport 'react';\nimport { getSize, getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Badge.module.css.mjs';\n\nconst defaultProps = {};\nconst varsResolver = createVarsResolver(\n  (theme, { radius, color, gradient, variant, size, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      gradient,\n      variant: variant || \"filled\",\n      autoContrast\n    });\n    return {\n      root: {\n        \"--badge-height\": getSize(size, \"badge-height\"),\n        \"--badge-padding-x\": getSize(size, \"badge-padding-x\"),\n        \"--badge-fz\": getSize(size, \"badge-fz\"),\n        \"--badge-radius\": radius === void 0 ? void 0 : getRadius(radius),\n        \"--badge-bg\": color || variant ? colors.background : void 0,\n        \"--badge-color\": color || variant ? colors.color : void 0,\n        \"--badge-bd\": color || variant ? colors.border : void 0,\n        \"--badge-dot-color\": variant === \"dot\" ? getThemeColor(color, theme) : void 0\n      }\n    };\n  }\n);\nconst Badge = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Badge\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    gradient,\n    leftSection,\n    rightSection,\n    children,\n    variant,\n    fullWidth,\n    autoContrast,\n    circle,\n    mod,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Badge\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */ jsxs(\n    Box,\n    {\n      variant,\n      mod: [\n        {\n          block: fullWidth,\n          circle,\n          \"with-right-section\": !!rightSection,\n          \"with-left-section\": !!leftSection\n        },\n        mod\n      ],\n      ...getStyles(\"root\", { variant }),\n      ref,\n      ...others,\n      children: [\n        leftSection && /* @__PURE__ */ jsx(\"span\", { ...getStyles(\"section\"), \"data-position\": \"left\", children: leftSection }),\n        /* @__PURE__ */ jsx(\"span\", { ...getStyles(\"label\"), children }),\n        rightSection && /* @__PURE__ */ jsx(\"span\", { ...getStyles(\"section\"), \"data-position\": \"right\", children: rightSection })\n      ]\n    }\n  );\n});\nBadge.classes = classes;\nBadge.displayName = \"@mantine/core/Badge\";\n\nexport { Badge };\n//# sourceMappingURL=Badge.mjs.map\n","'use client';\nimport 'react';\nimport { createSafeContext } from '../../core/utils/create-safe-context/create-safe-context.mjs';\nimport 'react/jsx-runtime';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\n\nconst [CardProvider, useCardContext] = createSafeContext(\n  \"Card component was not found in tree\"\n);\n\nexport { CardProvider, useCardContext };\n//# sourceMappingURL=Card.context.mjs.map\n","'use client';\nvar classes = {\"root\":\"m_e615b15f\",\"section\":\"m_599a2148\"};\n\nexport { classes as default };\n//# sourceMappingURL=Card.module.css.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../../core/factory/polymorphic-factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useCardContext } from '../Card.context.mjs';\nimport classes from '../Card.module.css.mjs';\n\nconst defaultProps = {};\nconst CardSection = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"CardSection\", defaultProps, _props);\n  const { classNames, className, style, styles, vars, withBorder, inheritPadding, mod, ...others } = props;\n  const ctx = useCardContext();\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      mod: [{ \"with-border\": withBorder, \"inherit-padding\": inheritPadding }, mod],\n      ...ctx.getStyles(\"section\", { className, style, styles, classNames }),\n      ...others\n    }\n  );\n});\nCardSection.classes = classes;\nCardSection.displayName = \"@mantine/core/CardSection\";\n\nexport { CardSection };\n//# sourceMappingURL=CardSection.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { Children, cloneElement } from 'react';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Paper } from '../Paper/Paper.mjs';\nimport { CardProvider } from './Card.context.mjs';\nimport { CardSection } from './CardSection/CardSection.mjs';\nimport classes from './Card.module.css.mjs';\n\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((_, { padding }) => ({\n  root: {\n    \"--card-padding\": getSpacing(padding)\n  }\n}));\nconst Card = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Card\", defaultProps, _props);\n  const { classNames, className, style, styles, unstyled, vars, children, padding, ...others } = props;\n  const getStyles = useStyles({\n    name: \"Card\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  const _children = Children.toArray(children);\n  const content = _children.map((child, index) => {\n    if (typeof child === \"object\" && child && \"type\" in child && child.type === CardSection) {\n      return cloneElement(child, {\n        \"data-first-section\": index === 0 || void 0,\n        \"data-last-section\": index === _children.length - 1 || void 0\n      });\n    }\n    return child;\n  });\n  return /* @__PURE__ */ jsx(CardProvider, { value: { getStyles }, children: /* @__PURE__ */ jsx(Paper, { ref, unstyled, ...getStyles(\"root\"), ...others, children: content }) });\n});\nCard.classes = classes;\nCard.displayName = \"@mantine/core/Card\";\nCard.Section = CardSection;\n\nexport { Card };\n//# sourceMappingURL=Card.mjs.map\n","'use client';\nvar classes = {\"root\":\"m_9e117634\"};\n\nexport { classes as default };\n//# sourceMappingURL=Image.module.css.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { useState, useEffect } from 'react';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Image.module.css.mjs';\n\nconst defaultProps = {};\nconst varsResolver = createVarsResolver((_, { radius, fit }) => ({\n  root: {\n    \"--image-radius\": radius === void 0 ? void 0 : getRadius(radius),\n    \"--image-object-fit\": fit\n  }\n}));\nconst Image = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Image\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    onError,\n    src,\n    radius,\n    fit,\n    fallbackSrc,\n    mod,\n    ...others\n  } = props;\n  const [error, setError] = useState(!src);\n  useEffect(() => setError(!src), [src]);\n  const getStyles = useStyles({\n    name: \"Image\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    varsResolver\n  });\n  if (error && fallbackSrc) {\n    return /* @__PURE__ */ jsx(\n      Box,\n      {\n        component: \"img\",\n        ref,\n        src: fallbackSrc,\n        ...getStyles(\"root\"),\n        onError,\n        mod: [\"fallback\", mod],\n        ...others\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      component: \"img\",\n      ref,\n      ...getStyles(\"root\"),\n      src,\n      onError: (event) => {\n        onError?.(event);\n        setError(true);\n      },\n      mod,\n      ...others\n    }\n  );\n});\nImage.classes = classes;\nImage.displayName = \"@mantine/core/Image\";\n\nexport { Image };\n//# sourceMappingURL=Image.mjs.map\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { keys } from '../../core/utils/keys/keys.mjs';\nimport { px } from '../../core/utils/units-converters/px.mjs';\nimport { filterProps } from '../../core/utils/filter-props/filter-props.mjs';\nimport 'react';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport { getSortedBreakpoints } from '../../core/utils/get-sorted-breakpoints/get-sorted-breakpoints.mjs';\nimport { getBaseValue } from '../../core/utils/get-base-value/get-base-value.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { InlineStyles } from '../../core/InlineStyles/InlineStyles.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\n\nfunction SimpleGridMediaVariables({\n  spacing,\n  verticalSpacing,\n  cols,\n  selector\n}) {\n  const theme = useMantineTheme();\n  const _verticalSpacing = verticalSpacing === void 0 ? spacing : verticalSpacing;\n  const baseStyles = filterProps({\n    \"--sg-spacing-x\": getSpacing(getBaseValue(spacing)),\n    \"--sg-spacing-y\": getSpacing(getBaseValue(_verticalSpacing)),\n    \"--sg-cols\": getBaseValue(cols)?.toString()\n  });\n  const queries = keys(theme.breakpoints).reduce(\n    (acc, breakpoint) => {\n      if (!acc[breakpoint]) {\n        acc[breakpoint] = {};\n      }\n      if (typeof spacing === \"object\" && spacing[breakpoint] !== void 0) {\n        acc[breakpoint][\"--sg-spacing-x\"] = getSpacing(spacing[breakpoint]);\n      }\n      if (typeof _verticalSpacing === \"object\" && _verticalSpacing[breakpoint] !== void 0) {\n        acc[breakpoint][\"--sg-spacing-y\"] = getSpacing(_verticalSpacing[breakpoint]);\n      }\n      if (typeof cols === \"object\" && cols[breakpoint] !== void 0) {\n        acc[breakpoint][\"--sg-cols\"] = cols[breakpoint];\n      }\n      return acc;\n    },\n    {}\n  );\n  const sortedBreakpoints = getSortedBreakpoints(keys(queries), theme.breakpoints).filter(\n    (breakpoint) => keys(queries[breakpoint.value]).length > 0\n  );\n  const media = sortedBreakpoints.map((breakpoint) => ({\n    query: `(min-width: ${theme.breakpoints[breakpoint.value]})`,\n    styles: queries[breakpoint.value]\n  }));\n  return /* @__PURE__ */ jsx(InlineStyles, { styles: baseStyles, media, selector });\n}\nfunction getBreakpoints(values) {\n  if (typeof values === \"object\" && values !== null) {\n    return keys(values);\n  }\n  return [];\n}\nfunction sortBreakpoints(breakpoints) {\n  return breakpoints.sort((a, b) => px(a) - px(b));\n}\nfunction getUniqueBreakpoints({\n  spacing,\n  verticalSpacing,\n  cols\n}) {\n  const breakpoints = Array.from(\n    /* @__PURE__ */ new Set([\n      ...getBreakpoints(spacing),\n      ...getBreakpoints(verticalSpacing),\n      ...getBreakpoints(cols)\n    ])\n  );\n  return sortBreakpoints(breakpoints);\n}\nfunction SimpleGridContainerVariables({\n  spacing,\n  verticalSpacing,\n  cols,\n  selector\n}) {\n  const _verticalSpacing = verticalSpacing === void 0 ? spacing : verticalSpacing;\n  const baseStyles = filterProps({\n    \"--sg-spacing-x\": getSpacing(getBaseValue(spacing)),\n    \"--sg-spacing-y\": getSpacing(getBaseValue(_verticalSpacing)),\n    \"--sg-cols\": getBaseValue(cols)?.toString()\n  });\n  const uniqueBreakpoints = getUniqueBreakpoints({ spacing, verticalSpacing, cols });\n  const queries = uniqueBreakpoints.reduce(\n    (acc, breakpoint) => {\n      if (!acc[breakpoint]) {\n        acc[breakpoint] = {};\n      }\n      if (typeof spacing === \"object\" && spacing[breakpoint] !== void 0) {\n        acc[breakpoint][\"--sg-spacing-x\"] = getSpacing(spacing[breakpoint]);\n      }\n      if (typeof _verticalSpacing === \"object\" && _verticalSpacing[breakpoint] !== void 0) {\n        acc[breakpoint][\"--sg-spacing-y\"] = getSpacing(_verticalSpacing[breakpoint]);\n      }\n      if (typeof cols === \"object\" && cols[breakpoint] !== void 0) {\n        acc[breakpoint][\"--sg-cols\"] = cols[breakpoint];\n      }\n      return acc;\n    },\n    {}\n  );\n  const media = uniqueBreakpoints.map((breakpoint) => ({\n    query: `simple-grid (min-width: ${breakpoint})`,\n    styles: queries[breakpoint]\n  }));\n  return /* @__PURE__ */ jsx(InlineStyles, { styles: baseStyles, container: media, selector });\n}\n\nexport { SimpleGridContainerVariables, SimpleGridMediaVariables };\n//# sourceMappingURL=SimpleGridVariables.mjs.map\n","'use client';\nvar classes = {\"container\":\"m_925c2d2c\",\"root\":\"m_2415a157\"};\n\nexport { classes as default };\n//# sourceMappingURL=SimpleGrid.module.css.mjs.map\n","'use client';\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { useRandomClassName } from '../../core/Box/use-random-classname/use-random-classname.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { SimpleGridContainerVariables, SimpleGridMediaVariables } from './SimpleGridVariables.mjs';\nimport classes from './SimpleGrid.module.css.mjs';\n\nconst defaultProps = {\n  cols: 1,\n  spacing: \"md\",\n  type: \"media\"\n};\nconst SimpleGrid = factory((_props, ref) => {\n  const props = useProps(\"SimpleGrid\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    cols,\n    verticalSpacing,\n    spacing,\n    type,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"SimpleGrid\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    vars\n  });\n  const responsiveClassName = useRandomClassName();\n  if (type === \"container\") {\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(SimpleGridContainerVariables, { ...props, selector: `.${responsiveClassName}` }),\n      /* @__PURE__ */ jsx(\"div\", { ...getStyles(\"container\"), children: /* @__PURE__ */ jsx(Box, { ref, ...getStyles(\"root\", { className: responsiveClassName }), ...others }) })\n    ] });\n  }\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    /* @__PURE__ */ jsx(SimpleGridMediaVariables, { ...props, selector: `.${responsiveClassName}` }),\n    /* @__PURE__ */ jsx(Box, { ref, ...getStyles(\"root\", { className: responsiveClassName }), ...others })\n  ] });\n});\nSimpleGrid.classes = classes;\nSimpleGrid.displayName = \"@mantine/core/SimpleGrid\";\n\nexport { SimpleGrid };\n//# sourceMappingURL=SimpleGrid.mjs.map\n"],"names":["ProjectsPage","_ref","data","projects","React","BaseLayout","Container","size","py","Box","mb","Title","order","Text","length","SimpleGrid","cols","base","sm","md","spacing","map","project","Link","key","id","to","slug","style","textDecoration","color","Card","shadow","padding","radius","withBorder","image","Section","Image","src","publicURL","height","alt","title","Group","justify","mt","fw","Badge","category","lineClamp","description","i","h","bg","Head","SEO","classes","defaultProps","varsResolver","theme","gradient","variant","autoContrast","colors","variantColorResolver","primaryColor","root","background","border","_props","ref","props","classNames","className","styles","unstyled","vars","leftSection","rightSection","children","fullWidth","circle","mod","others","getStyles","name","jsxs","block","jsx","displayName","CardProvider","useCardContext","CardSection","inheritPadding","ctx","_","_children","Children","toArray","content","child","index","type","cloneElement","value","Paper","fit","onError","fallbackSrc","error","setError","useState","useEffect","component","event","SimpleGridMediaVariables","verticalSpacing","selector","_verticalSpacing","baseStyles","toString","queries","keys","breakpoints","reduce","acc","breakpoint","media","filter","query","InlineStyles","getBreakpoints","values","getUniqueBreakpoints","sort","a","b","px","sortBreakpoints","Array","from","Set","SimpleGridContainerVariables","uniqueBreakpoints","container","factory","responsiveClassName","Fragment"],"sourceRoot":""}